/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client_indep;

import java.io.IOException;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author florentcardoen
 */
public class MainFrame extends javax.swing.JFrame {
    private ClientINDEP client;
    private String login;
    private AuthFrame af;
    /**
     * Creates new form MainFrame
     */
    public MainFrame(InetAddress addr, Integer p) {
        initComponents();
        boolean connect = false;
        do
        {
            try {
                client = new ClientINDEP(addr, p);
                client.connect();
                connect = true;
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);

                int n = JOptionPane.showConfirmDialog(
                        null,
                        "Impossible de se connecter au serveur.\nVoulez-vous r√©essayer?",
                        "Connexion impossible",
                        JOptionPane.YES_NO_OPTION);
                if(n == JOptionPane.NO_OPTION){
                    System.exit(0);
                }
                //System.exit(1);
            }
        }while(connect == false);
        af = new AuthFrame(client, this);
        af.setVisible(true);

        dESCR_CONT1.setClient(client);
        iNFER_TEST_ANOVA1.setClient(client);
        vENTES_COMP1.setClient(client);
        vENTES_REP1.setClient(client);
        iNFER_TEST_CONF1.setClient(client);
    }
    public void setLogin(String log)
    {
        login = log;
        af.dispose();
        this.setVisible(true);
    }
    public ClientINDEP getClient()
    {
        return client;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        dESCR_CONT1 = new client_indep.DESCR_CONT();
        vENTES_COMP1 = new client_indep.VENTES_COMP();
        vENTES_REP1 = new client_indep.VENTES_REP();
        iNFER_TEST_CONF1 = new client_indep.INFER_TEST_CONF();
        iNFER_TEST_ANOVA1 = new client_indep.INFER_TEST_ANOVA();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane2.addTab("DESCR_CONT", dESCR_CONT1);
        jTabbedPane2.addTab("VENTES_COMP", vENTES_COMP1);
        jTabbedPane2.addTab("VENTES_REP", vENTES_REP1);
        jTabbedPane2.addTab("INFER_TEST_CONF", iNFER_TEST_CONF1);
        jTabbedPane2.addTab("INFER_TEST_ANOVA", iNFER_TEST_ANOVA1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
        );

        jTabbedPane2.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             
             try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(AuthFrame.class.getName()).log(Level.SEVERE, null, ex);
                }

                try {
                    InetAddress addr = InetAddress.getByName("127.0.0.1");
                    MainFrame mf = new MainFrame(addr, 6001);
                } catch (UnknownHostException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private client_indep.DESCR_CONT dESCR_CONT1;
    private client_indep.INFER_TEST_ANOVA iNFER_TEST_ANOVA1;
    private client_indep.INFER_TEST_CONF iNFER_TEST_CONF1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private client_indep.VENTES_COMP vENTES_COMP1;
    private client_indep.VENTES_REP vENTES_REP1;
    // End of variables declaration//GEN-END:variables
}
